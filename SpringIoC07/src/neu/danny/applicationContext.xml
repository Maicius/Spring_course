<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
	
	
	<!--
		Prototype作用域：
			prototype作用域的Bean会导致在每次对该Bean请求(将其注入到另一个Bean中，
			或者以程序的方式调用容器的getBean()方法)时都会创建一个新的Bean实例。
			根据经验，对有状态的Bean应该使用prototype作用域，
			而对无状态的Bean则应该使用singleton作用域。
			
		注：
			对于prototype作用域的bean,有一点非常重要，那就是Spring不能对一个prototype bean的整个生命周期负责：
			1、容器在初始化、配置、装饰或者是装配完一个prototype实例后，将它交给客户端，随后就对该prototype实例不闻不问了。
			2、不管何种作用域，容器都会调用所有对象的初始化生命周期回调方法。
			3、但对prototype而言，任何配置好的析构生命周期回调方法都将不会被调用。
			4、清除prototype作用域的对象并释放任何prototype bean所持有的昂贵资源，都是客户端代码的职责。
				（让Spring容器释放被prototype作用域bean占用资源的一种可行方式是），
				通过使用bean的后置处理器，该处理器持有要被清除的bean的引用。
		
	 -->
	 
	<bean id="helloBean" class="neu.danny.HelloBean" scope="prototype"> 
        <property name="helloWord">
            <value>Hello! Justin!</value>
        </property> 
    </bean> 

</beans>